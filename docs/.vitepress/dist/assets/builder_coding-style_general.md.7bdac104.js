import{_ as s,c as n,o as a,d as l}from"./app.98e9ab83.js";const A=JSON.parse('{"title":"Coding Style","description":"","frontmatter":{},"headers":[{"level":2,"title":"Avoid long lines","slug":"avoid-long-lines","link":"#avoid-long-lines","children":[]},{"level":2,"title":"Consider arrays instead of if statements","slug":"consider-arrays-instead-of-if-statements","link":"#consider-arrays-instead-of-if-statements","children":[]}],"relativePath":"builder/coding-style/general.md"}'),p={name:"builder/coding-style/general.md"},o=l(`<h1 id="coding-style" tabindex="-1">Coding Style <a class="header-anchor" href="#coding-style" aria-hidden="true">#</a></h1><h2 id="avoid-long-lines" tabindex="-1">Avoid long lines <a class="header-anchor" href="#avoid-long-lines" aria-hidden="true">#</a></h2><p>Removing <code>{}</code>&#39;s and lines is NOT how we write readable code.</p><p><strong>Readable code tends to be terse, but that doesn&#39;t mean <code>terse === &#39;readability&#39;</code></strong></p><h2 id="consider-arrays-instead-of-if-statements" tabindex="-1">Consider arrays instead of if statements <a class="header-anchor" href="#consider-arrays-instead-of-if-statements" aria-hidden="true">#</a></h2><p>❌</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> canCreatePost computed(() </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">editor</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> return true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">publisher</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> return true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">author</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> return true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> return true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">superAdmin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> return true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>❌</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> canCreatePost computed(() </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">if</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">editor</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ||</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">publisher</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ||</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">author</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ||</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ||</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.role === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">superAdmin</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>✅</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> canCreatePost computed(() </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  const canCreatePostRoles </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">editor</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">publisher</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">author</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">superAdmin</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">  return canCreatePostRoles.includes(user.role)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>Since the data for <code>canCreatePostRoles</code> would almost certainly come from the backend, we&#39;d use a composable to manage user permissions. Here&#39;s a more realistic example.</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> userCan </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useCan</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">q-page</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">q-page-sticky</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#82AAFF;">userCan</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">create</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">, </span><span style="color:#A6ACCD;">Post</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#C792EA;">position</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bottom-right</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    &gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">q-btn</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">icon</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">mdiPlus</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">fab</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">q-page-sticky</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">q-page</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,13),e=[o];function t(r,c,D,y,F,i){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
