import{_ as e,c as s,o as a,d as n}from"./app.98e9ab83.js";const y=JSON.parse('{"title":"General","description":"","frontmatter":{},"headers":[{"level":2,"title":"Do NOT shorten things","slug":"do-not-shorten-things","link":"#do-not-shorten-things","children":[]},{"level":2,"title":"Wrong words are okay if they solve pluralization issues","slug":"wrong-words-are-okay-if-they-solve-pluralization-issues","link":"#wrong-words-are-okay-if-they-solve-pluralization-issues","children":[]}],"relativePath":"builder/naming/general.md"}'),o={name:"builder/naming/general.md"},t=n(`<h1 id="general" tabindex="-1">General <a class="header-anchor" href="#general" aria-hidden="true">#</a></h1><h2 id="do-not-shorten-things" tabindex="-1">Do NOT shorten things <a class="header-anchor" href="#do-not-shorten-things" aria-hidden="true">#</a></h2><p>There are a few exceptions to this rule</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> eqt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Fork Lift</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span></code></pre></div><p>Do you know what eqt stands for? In this case, it&#39;s &quot;equipment&quot;.</p><h2 id="wrong-words-are-okay-if-they-solve-pluralization-issues" tabindex="-1">Wrong words are okay if they solve pluralization issues <a class="header-anchor" href="#wrong-words-are-okay-if-they-solve-pluralization-issues" aria-hidden="true">#</a></h2><p>There is nothing worse than a word you can&#39;t pluralize. For example, <code>equipment</code>.</p><p>Using <code>equipment</code> as an example, there are two ways we can solve this:</p><ol><li>use <code>equipments</code> as the plural, and <code>equipment</code> as the singular</li><li>use <code>equipment</code> as the plural, and <code>equipmentItem</code> as the singular</li></ol><p>It&#39;s hard to create a hard rule around this, because both these scenarios aren&#39;t ideal. <em>We will lean toward option 1</em> because it makes editing files easier (often you have a list of singular table names, and want to pluralize them by simply adding an &quot;s&quot;)</p>`,10),l=[t];function r(i,p,c,d,h,u){return a(),s("div",null,l)}const _=e(o,[["render",r]]);export{y as __pageData,_ as default};
